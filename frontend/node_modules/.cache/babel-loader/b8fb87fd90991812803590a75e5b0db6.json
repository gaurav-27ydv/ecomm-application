{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/Codes/Projects/ecomm-application/frontend/src/Views/Shippingscreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../Actions/cartActions\";\nimport FormContainer from \"../Components/FormContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shippingscreen = ({\n  history\n}) => {\n  _s();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalcode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"Address\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter City\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postalcode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Postal Code\",\n          value: postalCode,\n          onChange: e => setPostalcode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"county\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Enter Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Country\",\n          value: country,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"my-3\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Shippingscreen, \"OqnF2+sq3/mMDtZmIUaTCUmGsM0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Shippingscreen;\nexport default Shippingscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shippingscreen\");","map":{"version":3,"sources":["/home/gaurav/Codes/Projects/ecomm-application/frontend/src/Views/Shippingscreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","saveShippingAddress","FormContainer","Shippingscreen","history","address","setAddress","shippingAddress","city","setCity","postalCode","setPostalcode","country","setCountry","dispatch","cart","state","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../Actions/cartActions\";\nimport FormContainer from \"../Components/FormContainer\";\n\nconst Shippingscreen = ({ history }) => {\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalcode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n  };\n  return (\n    <FormContainer>\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"Address\" required>\n          <Form.Label>Enter Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>Enter City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"postalcode\">\n          <Form.Label>Enter Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Postal Code\"\n            value={postalCode}\n            onChange={(e) => setPostalcode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"county\">\n          <Form.Label>Enter Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\" className=\"my-3\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default Shippingscreen;\n"]},"metadata":{},"sourceType":"module"}